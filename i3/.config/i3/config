# == GAPS ==
gaps inner 0
gaps outer 0
bindsym $mod+z			    gaps outer current plus 5
bindsym $mod+Shift+z		gaps outer current minus 5
bindsym $mod+Shift+d		gaps inner current set 0;  gaps outer current set 0
bindsym $mod+Shift+t		gaps inner current set 15;  gaps outer current set 15

# == STARTUP ==
# set pape
exec nitrogen --restore &

# setup monitor
exec_always --no-startup-id ~/code/shell/setup_monitor.sh &

# use picom
exec picom --config ~/.config/picom.conf

# swallow
exec --no-startup-id python3 ~/.config/i3/i3-swallow.py

# better layout
exec_always  ~/.config/i3/alternating_layouts.py

# polybar
exec_always --no-startup-id ~/.config/polybar/launch.sh &

# == KEY BINDINGS == 
bindsym $mod+b			exec --no-startup-id /usr/bin/brave-browser
bindsym $mod+c 			exec --no-startup-id "code"
bindsym $mod+Shift+c    exec --no-startup-id /usr/bin/calibre
bindsym $mod+d          exec "rofi -show drun -show-icons -lines 3 -theme ~/.config/rofi/rofi-themes/slate.rasi"
# bindsym $mod+o 			exec urxvt -e "xdg-open \"$(fzf)\""
bindsym $mod+o 			exec urxvt -e lf
# bindsym $mod+m			exec urxvt -e "cmus"
bindsym $mod+m			exec audacious
bindsym $mod+p			exec speedcrunch
bindsym $mod+Shift+p    exec mypaint 
bindsym $mod+t			exec thunar
bindsym $mod+g			exec guvcview
bindsym $mod+Shift+s    exec maim ~/media/images/screeshots/$(date +%s).png && notify-send "Screenshot taken"
bindsym $mod+Shift+m    exec amixer set Master 0
bindsym $mod+i          exec amixer set Master 10%+ 
bindsym $mod+Shift+i    exec amixer set Master 10%- 
bindsym $mod+Shift+a    exec "~/.config/rofi/rofi-scripts/monitor_layout.sh" 
bindsym $mod+Shift+x    exec betterlockscreen -l

# == DEFAULTS ==
for_window [class="^.*"] border pixel 0 

set $term --no-startup-id $TERMINAL
set $mod Mod4
set $stoprec --no-startup-id dmenurecord kill
set $shutdown sudo -A shutdown -h now
set $reboot sudo -A reboot
set $netrefresh --no-startup-id sudo -A systemctl restart NetworkManager
set $hibernate sudo -A systemctl suspend  

bindsym XF86Suspend exec --no-startup-id lockscreen 

# set font
font pango:monospace 8

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec rxvt

# kill focused window
bindsym $mod+Shift+q kill

# change focus (vim style)
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# change focus (default)
# bindsym $mod+j focus left
# bindsym $mod+k focus down
# bindsym $mod+l focus up
# bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window (vim style)
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# move focused window (defualt)
# bindsym $mod+Shift+j move left
# bindsym $mod+Shift+k move down
# bindsym $mod+Shift+l move up
# bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+V split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
# bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt
    
        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg
client.background       $bg
